"""该项目的大多数功能都是实现了Rabbitmq的一些特性，实际上，只是一个小型的消息服务
中间件。我一开始的目标是为自己的爬虫提供一个稳定的好用的队列，一开始只是想用几天时间
写完，后来经过不断的写，不断的发现好的方法，测试，断断续续差不多用了接近一个月的时间
才写完。

由于目前主流的MQ都有最大数据长度限制，而我这个是没有数据最大长度限制的，数据最大长度
限制取决于内存的剩余大小。所以是可以完全将整个网页都放进队列都是可以的。不过，建议放
短消息，这样服务器整体的效率会更高一些。

为什么会这么说？因为我早起使用Kafka时，大家都是将很多任务一起推送到kafka，而kafa内部
使用的是epoll这种，有可能不是，但是我推测就是epoll这种并发网络编程模式，所以就是单线
程的了。由于技术团队的老大说必须要发送大的，长的消息，也就是将将1000个爬虫任务一起发送
到队列，所以kafka非常的卡，一开始我不知道原因。

直到我写完了这个项目，我终于知道了kafka之所以卡的真正原因，是他们使用不正确导致。

我只记得那个kafka，用客户端打开都超级卡，经常无缘无故的卡死。

这个MQ支持10万在线数没有任务问题，我已经在虚拟机中测试了2g内存，5w连接数是没有问题的
，只是如果随着队列的消息增加，会导致内存增加。

我的爬虫工程，就是需要这样一个队列服务器，因为大多数爬虫消费者都是处于等待任务的状态，所
以正好可以模拟。

开发这个项目还有另外一个原因，我实在是搞不定rabbitmq客户端经常无缘无故断开，而且就算是
我把心跳设置不心跳，这样就会导致另外的bug，rabbitmq的队列会在运行一段时间后卡住，大量
的未确认任务，实际上是已经确认过了。我已经是用了几年的rabbitmq了，而且在它上面的编程体
验并不好，于是，开发这个项目就变成了我的理由。

这也是这个项目为什么就出现的主要原因。

我项目的版本号，第一个数是项目发布生产环境才能用的版本号，第二个和第三个是修改bug后增加
版本号，总之第二个和第三个是维护记录，第一个是功能。
"""

version = '2.0.2'